plugin: amazon.aws.aws_ec2
profile: "{{ lookup('env', 'AWS_PROFILE') | default('', true) }}"
regions:
  - us-east-1
filters:
  # All instances with their state as `running`
  instance-state-name: running
keyed_groups:
  # Create groups based on the 'Role' tag
  - key: tags['Role']
    prefix: 'KEYED-BY-ROLE'
    separator: '--'
  # Create groups based on the 'Environment' tag
  - key: tags['Environment']
    prefix: 'KEYED-BY-ENV'
    separator: '--'
  # Create groups based on the 'Stack' tag
  - key: tags['Stack']
    prefix: 'KEYED-BY-STACK'
    separator: '--'

groups:
  # mintworld Cluster
  mintworld_all: "'mintworld' in (tags['Stack'])"
  mintworld_nomad_servers:
    "'nomad_svr' in (tags['Role']) and 'mintworld' in (tags['Stack'])"
  mintworld_consul_servers:
    "'consul_svr' in (tags['Role']) and 'mintworld' in (tags['Stack'])"
  mintworld_nomad_workers:
    "'nomad_wkr' in (tags['Role']) and 'mintworld' in (tags['Stack'])"

hostnames:
  - tag:Name # Use the 'Name' tag as the hostname, for ansible_hostname and inventory_hostname

compose:
  ansible_host: instance_id # Use the instance_id as the ansible_host with the SSM plugin
  ansible_connection: '"community.aws.aws_ssm"' # Use the SSM plugin for the connection
  # Need to set the ansible_user to 'ssm-user',
  # if the instance is using the SSM plugin.
  # The default is set in the ansible.cfg file.
  #
  # Depending on the System Manager setup,
  # you may need to adjust the ansible_user value.
  #
  # ansible_user: '"ssm-user"'
