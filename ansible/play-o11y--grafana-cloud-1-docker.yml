---
- name: Grafana Cloud Setup
  hosts: '{{ variable_host | default("null") }}'
  become: true
  gather_facts: true

  vars:
    prometheus_push_endpoint:
      "{{ lookup('env', 'GRAFANA_CLOUD_URL_Prometheus') }}"
    prometheus_username:
      "{{ lookup('env', 'GRAFANA_CLOUD_USERNAME_Prometheus') }}"
    prometheus_password:
      "{{ lookup('env', 'GRAFANA_CLOUD_API_KEY_Prometheus') }}"
    loki_push_endpoint: "{{ lookup('env', 'GRAFANA_CLOUD_URL_Loki') }}"
    loki_username: "{{ lookup('env', 'GRAFANA_CLOUD_USERNAME_Loki') }}"
    loki_password: "{{ lookup('env', 'GRAFANA_CLOUD_API_KEY_Loki') }}"
    is_enabled_metrics: '{{ variable_is_enabled_metrics | default(True) }}'
    is_enabled_logs: '{{ variable_is_enabled_logs | default(False) }}'

  tasks:
    - name: Check if required environment variables are set
      ansible.builtin.assert:
        that:
          - prometheus_push_endpoint != ""
          - prometheus_username != ""
          - prometheus_password != ""
          - loki_push_endpoint != ""
          - loki_username != ""
          - loki_password != ""
        fail_msg:
          'One or more required environment variables are not set. Please set
          all required variables.'

    - name: Check if Alloy service is enabled
      ansible.builtin.command: systemctl is-enabled alloy
      register: alloy_service_check
      ignore_errors: true
      changed_when: false

    - name: Check if Docker is installed
      ansible.builtin.command: which docker
      register: docker_check
      ignore_errors: true
      changed_when: false

    - name: Exit if checks fail
      ansible.builtin.fail:
        msg: 'Checks failed. Please check the logs for more information.'
      when: docker_check.rc != 0 or alloy_service_check.rc != 0

    - name: Setup Docker integration
      when: docker_check.rc == 0 and alloy_service_check.rc == 0
      block:
        - name: Append Docker config to Alloy config file
          when: is_enabled_metrics | bool
          ansible.builtin.blockinfile:
            path: /etc/alloy/config.alloy
            prepend_newline: true
            marker:
              '// {mark} ANSIBLE MANAGED BLOCK -- Docker Integration - Metrics'
            block: |
              {{ lookup('template', 'grafana-labs/docker.metrics.config.alloy.j2') }}

        - name: Append Docker logs config to Alloy config file
          when: is_enabled_logs | bool
          ansible.builtin.blockinfile:
            path: /etc/alloy/config.alloy
            prepend_newline: true
            marker:
              '// {mark} ANSIBLE MANAGED BLOCK -- Docker Integration - Logs'
            block: |
              {{ lookup('template', 'grafana-labs/docker.logs.config.alloy.j2') }}

        - name: Add alloy user to docker group
          ansible.builtin.user:
            name: alloy
            groups: docker
            append: true

        - name: Change the user to root in Alloy service user
          ansible.builtin.lineinfile:
            path: /etc/systemd/system/alloy.service
            regexp: '^User=alloy'
            line: 'User=root'
            state: present

        - name: Reload the systemd daemon
          ansible.builtin.systemd:
            daemon_reload: true

        - name: Restart the Alloy service
          ansible.builtin.systemd:
            name: alloy
            state: restarted
