#!/bin/bash
set -euo pipefail

# Source the FCC logging script
if [[ -f "/usr/local/bin/fcc-logtool.sh" ]]; then
  source "/usr/local/bin/fcc-logtool.sh"
else
  echo "ERROR: fcc-logtool.sh not found." >&2
  exit 1
fi

# Setup logging for this script
fCC_setup_logtool
fCC_log INFO "Starting user-data script execution."

# Ensure script runs only once
SCRIPT_NAME=$(basename "$0")
SCRIPT_HASH=$(echo "$SCRIPT_NAME" | md5sum | awk '{print $1}')
FLAG_FILE="/var/run/user-data-$SCRIPT_HASH.flag"

if [[ -f "$FLAG_FILE" ]]; then
  fCC_log INFO "Script already executed."
  exit 0
fi
touch "$FLAG_FILE"

# Fetch metadata and configure Consul
setup_consul_config() {
  # Check for the existence of SSM parameters before proceeding
  if ! aws ssm get-parameter --name "/root/consul/consul-agent-ca" &>/dev/null; then
    fCC_error "Missing SSM parameter: /root/consul/consul-agent-ca"
    exit 1
  fi
  # Create directories if they do not exist
  mkdir -p /etc/consul.d/certs
  # Fetch and create PEM files
  aws ssm get-parameter --name "/root/consul/consul-agent-ca" --with-decryption --query "Parameter.Value" --output text >/etc/consul.d/certs/consul-agent-ca.pem

  # Update encrypt property in the consul config
  if ! aws ssm get-parameter --name "/${tf_datacenter}/consul/${tf_datacenter}-gossip-key" &>/dev/null; then
    fCC_error "Missing SSM parameter: /${tf_datacenter}/consul/${tf_datacenter}-gossip-key"
    exit 1
  fi
  local encrypt_key
  encrypt_key=$(aws ssm get-parameter --name "/${tf_datacenter}/consul/${tf_datacenter}-gossip-key" --with-decryption --query "Parameter.Value" --output text)
  sed -i "s/^ *encrypt *=.*/encrypt = \"$encrypt_key\"/" /etc/consul.d/consul.hcl

  fCC_log INFO "Consul certificates, keys, and encrypt property have been set up."
}

start_consul_service() {
  # Check for the existence of the Consul systemd unit file
  if [[ ! -f "/etc/systemd/system/consul.service" ]]; then
    fCC_error "Consul systemd unit file does not exist."
    exit 1
  fi

  # Reload systemd to recognize any changes
  sudo systemctl daemon-reload

  # Enable and start the Consul service
  sudo systemctl enable --now consul.service
  if systemctl is-active --quiet consul.service; then
    fCC_log INFO "Consul service is active"
  else
    fCC_error "Failed to start Consul service"
  fi
}

# Main execution
startup_consul() {
  setup_consul_config
  start_consul_service
  fCC_log INFO "User-data script execution completed."
}

startup_consul || fCC_error "An error occurred during script execution."
