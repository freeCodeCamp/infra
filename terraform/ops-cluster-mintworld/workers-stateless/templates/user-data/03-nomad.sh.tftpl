#!/bin/bash
set -euo pipefail

# Source the FCC logging script
if [[ -f "/usr/local/bin/fcc-logtool.sh" ]]; then
  source "/usr/local/bin/fcc-logtool.sh"
else
  echo "ERROR: fcc-logtool.sh not found." >&2
  exit 1
fi

# Setup logging for this script
fCC_setup_logtool
fCC_log INFO "Starting user-data script execution."

# Ensure script runs only once
SCRIPT_NAME=$(basename "$0")
SCRIPT_HASH=$(echo "$SCRIPT_NAME" | md5sum | awk '{print $1}')
FLAG_FILE="/var/run/user-data-$SCRIPT_HASH.flag"

if [[ -f "$FLAG_FILE" ]]; then
  fCC_log INFO "Script already executed."
  exit 0
fi
touch "$FLAG_FILE"

# Fetch metadata and configure Nomad
setup_nomad_config() {
  # Check for the existence of SSM parameters before proceeding
  if ! aws ssm get-parameter --name "/${tf_datacenter}/nomad/${tf_datacenter}-gossip-key" &>/dev/null; then
    fCC_error "Missing SSM parameter: /${tf_datacenter}/nomad/${tf_datacenter}-gossip-key"
    exit 1
  fi
  # Update encrypt property in the nomad config
  local encrypt_key
  encrypt_key=$(aws ssm get-parameter --name "/${tf_datacenter}/nomad/${tf_datacenter}-gossip-key" --with-decryption --query "Parameter.Value" --output text)
  sed -i "s/^ *encrypt *=.*/encrypt = \"$encrypt_key\"/" /etc/nomad.d/nomad.hcl

  fCC_log INFO "Nomad certificates, keys, and encrypt property have been set up."
}

start_nomad_service() {
  # Check for the existence of the Nomad systemd unit file
  if [[ ! -f "/etc/systemd/system/nomad.service" ]]; then
    fCC_error "Nomad systemd unit file does not exist."
    exit 1
  fi

  # Reload systemd to recognize any changes
  sudo systemctl daemon-reload

  # Enable and start the Nomad service
  sudo systemctl enable --now nomad.service
  if systemctl is-active --quiet nomad.service; then
    fCC_log INFO "Nomad service is active"
  else
    fCC_error "Failed to start Nomad service"
  fi
}

# Main execution
startup_nomad() {
  setup_nomad_config
  start_nomad_service
  fCC_log INFO "User-data script execution completed."
}

startup_nomad || fCC_error "An error occurred during script execution."
