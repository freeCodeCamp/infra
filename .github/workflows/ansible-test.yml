name: Ansible Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      inventory:
        description: 'Inventory file to test'
        type: choice
        required: true
        default: 'linode.yml'
        options:
          - 'linode.yml'
      verbosity:
        description: 'Verbosity level for logs'
        type: choice
        required: true
        default: '-v'
        options:
          - '-v'
          - '-vv'
          - '-vvv'

jobs:
  test:
    name: Ansible Test
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: './ansible'
      LINODE_API_TOKEN: ${{ secrets.LINODE_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f

      - name: Setup Ansible and Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          make install

      - name: Test venv isolation (should fail)
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          if ansible --version >/dev/null 2>&1; then
            echo "ERROR: ansible found in system PATH - venv isolation failed"
            exit 1
          else
            echo "Good - ansible not in system PATH"
          fi

      - name: Test venv activation (should pass)
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          source .venv/bin/activate
          ansible --version

      - name: Validate Inventory
        env:
          LINODE_API_TOKEN: ${{ secrets.LINODE_TOKEN }}
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          source .venv/bin/activate
          HOST_COUNT=$(ansible-inventory -i inventory/linode.yml --list 2>/dev/null | jq -r '._meta.hostvars | keys | length')
          if [ "$HOST_COUNT" -eq 0 ]; then
            echo "ERROR: No hosts found in inventory - would run against localhost"
            exit 1
          fi
          echo "Inventory validation passed: $HOST_COUNT hosts found"

      - name: Test connection to random VM
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          source .venv/bin/activate
          make test INVENTORY=${{ inputs.inventory }}
