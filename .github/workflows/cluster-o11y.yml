name: TF - Cluster o11y - Linode

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/cluster-o11y/**'
  push:
    branches:
      - main
    paths:
      - 'terraform/cluster-o11y/**'

env:
  TF_CLOUD_ORGANIZATION: freecodecamp
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_WORKSPACE: tfws-ops-o11y
  CONFIG_DIRECTORY: terraform/cluster-o11y
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform-cloud-speculative-run:
    if: github.ref == 'refs/heads/main' && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Terraform Cloud Speculative Run
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

        # This is only for the GitHub Actions runner, not Terraform Cloud
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2

        # This is only for formatting check on GitHub Actions runner, not Terraform Cloud
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive -diff

      - name: Post Format
        if: always() && github.ref != 'refs/heads/main' && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
        uses: GetTerminus/terraform-pr-commenter@e86dd74eb198208c55079399c2f6cc12e44e333a # v2
        with:
          commenter_type: fmt
          commenter_input: ${{ format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) }}
          commenter_exitcode: ${{ steps.fmt.outputs.exitcode }}
          # This is the minimum version required to get the comment to show up
          terraform_version: 1.4

      - name: Terraform Cloud Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@4c569ffb1a0f1bf0daf00539abb505bcd246748a # v1.0.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Terraform Cloud Create Speculative Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@4c569ffb1a0f1bf0daf00539abb505bcd246748a # v1.0.0
        id: run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: true
          message: "Triggered From GitHub Actions CI ${{ github.sha }}"

      - name: Terraform Cloud Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@4c569ffb1a0f1bf0daf00539abb505bcd246748a # v1.0.0
        id: plan-output
        with:
          plan: ${{ steps.run.outputs.plan_id }}

      - name: Comment on PR
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output')
            })
            const output = `#### Terraform Cloud Plan Output
               \`\`\`\n
               Plan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.
               \`\`\`
               [Terraform Cloud Plan](${{ steps.run.outputs.run_link }})
               `
            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

  terraform-cloud-apply-run:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Terraform Cloud Apply Run
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Terraform Cloud Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@4c569ffb1a0f1bf0daf00539abb505bcd246748a # v1.0.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Terraform Cloud Create Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@4c569ffb1a0f1bf0daf00539abb505bcd246748a # v1.0.0
        id: run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          message: "Triggered From GitHub Actions CI ${{ github.sha }}"

      - uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        id: apply
        if: ${{ fromJSON(steps.run.outputs.payload).data.attributes.actions.IsConfirmable }}
        with:
          run: ${{ steps.run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
